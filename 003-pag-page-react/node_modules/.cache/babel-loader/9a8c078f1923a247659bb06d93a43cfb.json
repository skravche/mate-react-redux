{"ast":null,"code":"import _classCallCheck from \"/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/src/pagination.js\";\nimport React, { Component } from 'react';\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pagination).apply(this, arguments));\n  }\n\n  _createClass(Pagination, [{\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this = this;\n\n      var _this$props = this.props,\n          perPage = _this$props.perPage,\n          total = _this$props.total,\n          onChange = _this$props.onChange,\n          activePage = _this$props.activePage;\n      var pagesCount = Math.ceil(total / perPage);\n      console.log('pagPage = ', activePage);\n      console.log('pagesCount = ', pagesCount);\n      var nnn = this.props.activePage;\n\n      if (nnn <= 1) {\n        nnn = true;\n        console.log(nnn);\n      }\n\n      return Array.from(Array(pagesCount), function (v, i) {\n        return i + 1 === _this.props.activePage ? React.createElement(\"button\", {\n          className: \"active-btn\",\n          key: i,\n          onClick: function onClick() {\n            return onChange(i + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, i + 1) : React.createElement(\"button\", {\n          className: \"no-active-btn\",\n          key: i,\n          onClick: function onClick() {\n            return onChange(i + 1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, i + 1);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"prev-btn\",\n        onClick: function onClick() {\n          return _this2.props.onChange(_this2.props.activePage - 1);\n        },\n        disabled: this.props.activePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Back\"), this.renderButtons(), React.createElement(\"button\", {\n        className: \"next-btn\",\n        onClick: function onClick() {\n          return _this2.props.onChange(_this2.props.activePage + 1);\n        },\n        disabled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Next\"));\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\nexport default Pagination;\n/*\n    return Array.from(Array(pagesCount), (v, i) => (\n      i + 1 === this.props.activePage\n        ? <button className='active-page page-number-btn' key={i} onClick={() => onChange(i + 1)}>\n            {i + 1}\n          </button>\n        : <button className='page-number-btn' key={i} onClick={() => onChange(i + 1)}>\n            {i + 1}\n          </button>\n    ));\n\n\n\n\n    return Array.from(Array(pagesCount), (v, i) => (\n      <button key={i} onClick={() => onChange(i + 1)}>\n        <style>{'button { background-color: lightgrey;}'}</style>\n        {i + 1}\n      </button>\n    ));\n\n\n    return (\n      <div className=\"pages-nav-buttons\">\n        <button\n          className=\"page-nav-btn\"\n          onClick={() => this.props.onChange(this.props.activePage - 1)}\n          disabled={ this.props.activePage === 1}\n        >\n          Previous\n        </button>\n\n        {this.renderButtons()}\n\n        <button\n          className=\"page-nav-btn\"\n          onClick={() => this.props.onChange(this.props.activePage + 1)}\n          disabled={this.props.activePage === Math.ceil(this.props.total / this.props.perPage)}\n        >\n          Next\n        </button>\n      </div>\n    );\n*/","map":{"version":3,"sources":["/media/srg/Stuff/Study/Mate/React JS/001-test-react/test03/src/pagination.js"],"names":["React","Component","Pagination","props","perPage","total","onChange","activePage","pagesCount","Math","ceil","console","log","nnn","Array","from","v","i","renderButtons"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;oCACY;AAAA;;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACNC,OADM,eACNA,OADM;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,UADpB,eACoBA,UADpB;AAEd,UAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGD,OAAlB,CAAnB;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,UAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,UAA7B;AAEA,UAAIK,GAAG,GAAG,KAAKV,KAAL,CAAWI,UAArB;;AACA,UAAIM,GAAG,IAAI,CAAX,EAAc;AACZA,QAAAA,GAAG,GAAG,IAAN;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;;AAED,aAAOC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACN,UAAD,CAAhB,EAA8B,UAACQ,CAAD,EAAIC,CAAJ;AAAA,eACnCA,CAAC,GAAG,CAAJ,KAAU,KAAI,CAACd,KAAL,CAAWI,UAArB,GACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,GAAG,EAAEU,CAApC;AAAuC,UAAA,OAAO,EAAE;AAAA,mBAAMX,QAAQ,CAACW,CAAC,GAAG,CAAL,CAAd;AAAA,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,CAAC,GAAG,CADP,CADF,GAKE;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,GAAG,EAAEA,CAFP;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMX,QAAQ,CAACW,CAAC,GAAG,CAAL,CAAd;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGA,CAAC,GAAG,CALP,CANiC;AAAA,OAA9B,CAAP;AAeD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACd,KAAL,CAAWG,QAAX,CAAoB,MAAI,CAACH,KAAL,CAAWI,UAAX,GAAwB,CAA5C,CAAN;AAAA,SAFX;AAGE,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EASG,KAAKW,aAAL,EATH,EAWE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACf,KAAL,CAAWG,QAAX,CAAoB,MAAI,CAACH,KAAL,CAAWI,UAAX,GAAwB,CAA5C,CAAN;AAAA,SAFX;AAGE,QAAA,QAAQ,EAAE,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF;AAqBD;;;;EArDsBN,S;;AAwDzB,eAAeC,UAAf;AAEA","sourcesContent":["import React, { Component } from 'react';\n\nclass Pagination extends Component {\n  renderButtons() {\n    const { perPage, total, onChange, activePage } = this.props;\n    const pagesCount = Math.ceil(total / perPage);\n\n    console.log('pagPage = ', activePage);\n    console.log('pagesCount = ', pagesCount);\n\n    let nnn = this.props.activePage;\n    if (nnn <= 1) {\n      nnn = true;\n      console.log(nnn);\n    }\n\n    return Array.from(Array(pagesCount), (v, i) =>\n      i + 1 === this.props.activePage ? (\n        <button className=\"active-btn\" key={i} onClick={() => onChange(i + 1)}>\n          {i + 1}\n        </button>\n      ) : (\n        <button\n          className=\"no-active-btn\"\n          key={i}\n          onClick={() => onChange(i + 1)}\n        >\n          {i + 1}\n        </button>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"prev-btn\"\n          onClick={() => this.props.onChange(this.props.activePage - 1)}\n          disabled={this.props.activePage}\n        >\n          Back\n        </button>\n\n        {this.renderButtons()}\n\n        <button\n          className=\"next-btn\"\n          onClick={() => this.props.onChange(this.props.activePage + 1)}\n          disabled={false}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Pagination;\n\n/*\n    return Array.from(Array(pagesCount), (v, i) => (\n      i + 1 === this.props.activePage\n        ? <button className='active-page page-number-btn' key={i} onClick={() => onChange(i + 1)}>\n            {i + 1}\n          </button>\n        : <button className='page-number-btn' key={i} onClick={() => onChange(i + 1)}>\n            {i + 1}\n          </button>\n    ));\n\n\n\n\n    return Array.from(Array(pagesCount), (v, i) => (\n      <button key={i} onClick={() => onChange(i + 1)}>\n        <style>{'button { background-color: lightgrey;}'}</style>\n        {i + 1}\n      </button>\n    ));\n\n\n    return (\n      <div className=\"pages-nav-buttons\">\n        <button\n          className=\"page-nav-btn\"\n          onClick={() => this.props.onChange(this.props.activePage - 1)}\n          disabled={ this.props.activePage === 1}\n        >\n          Previous\n        </button>\n\n        {this.renderButtons()}\n\n        <button\n          className=\"page-nav-btn\"\n          onClick={() => this.props.onChange(this.props.activePage + 1)}\n          disabled={this.props.activePage === Math.ceil(this.props.total / this.props.perPage)}\n        >\n          Next\n        </button>\n      </div>\n    );\n*/\n"]},"metadata":{},"sourceType":"module"}